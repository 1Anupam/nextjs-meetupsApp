{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anupamsushil/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/anupamsushil/Desktop/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["Fragment","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;AACA,SAASA,QAAT,QAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,QAAD;AAAA,2BAEA,QAAC,YAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQN,a;;AA6DT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return (\n    <Fragment >\n      \n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n    </Fragment>\n  );\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://anupam:aks739@cluster0.ewjxh.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db(\"meetups\");\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  \n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://anupam:aks739@cluster0.ewjxh.mongodb.net/?retryWrites=true&w=majority\"\n  );\n  const db = client.db(\"meetups\");\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n\n  client.close();\n  return {\n    props: {\n      meetupData: {...selectedMeetup,\n        _id: selectedMeetup._id.toString(),\n      }\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}